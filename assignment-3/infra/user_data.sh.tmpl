#!/bin/bash
set -euo pipefail

exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1

apt-get update -y
apt-get install -y ca-certificates curl gnupg lsb-release

install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
chmod a+r /etc/apt/keyrings/docker.gpg

echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo $VERSION_CODENAME) stable" | \
  tee /etc/apt/sources.list.d/docker.list > /dev/null

apt-get update -y
apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

systemctl enable docker
systemctl start docker

usermod -aG docker ubuntu || true

FRONTEND_IMAGE="${frontend_image}"
BACKEND_IMAGE="${backend_image}"
FRONTEND_HOST_PORT="${frontend_host_port}"
FRONTEND_CONTAINER_PORT="${frontend_container_port}"
BACKEND_CONTAINER_PORT="${backend_container_port}"

docker pull "$FRONTEND_IMAGE"
docker pull "$BACKEND_IMAGE"

cat >/opt/app-compose.yml <<'YAML'
version: "3.9"
services:
  backend:
    image: ${BACKEND_IMAGE}
    container_name: backend
    restart: unless-stopped
    environment:
%{ for k, v in backend_env ~}
      ${k}: ${v}
%{ endfor ~}
    ports:
      - "${BACKEND_CONTAINER_PORT}:${BACKEND_CONTAINER_PORT}"
  frontend:
    image: ${FRONTEND_IMAGE}
    container_name: frontend
    restart: unless-stopped
    environment:
%{ for k, v in frontend_env ~}
      ${k}: ${v}
%{ endfor ~}
    depends_on:
      - backend
    ports:
      - "${FRONTEND_HOST_PORT}:${FRONTEND_CONTAINER_PORT}"
YAML

docker compose -f /opt/app-compose.yml up -d


